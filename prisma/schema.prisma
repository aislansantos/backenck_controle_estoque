generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Seller {
    id       Int        @id @default(autoincrement())
    name     String     @db.VarChar(255)
    email    String     @unique(map: "uc_seller_email") @db.VarChar(100)
    branch   String     @db.VarChar(100)
    Customer Customer[]
}

model Customer {
    id        Int     @id @default(autoincrement())
    name      String  @db.VarChar(255)
    email     String? @unique @db.VarChar(100)
    city      String  @db.VarChar(100)
    active    Boolean @default(true)
    id_seller Int

    seller Seller @relation(fields: [id_seller], references: [id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Product {
    id             Int     @id @default(autoincrement())
    description    String? @db.VarChar(255)
    amount         Int
    fk_id_unit     Int
    fk_id_category Int
    active         Boolean @default(true)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ProductCategory {
    id          Int    @id @default(autoincrement())
    description String @unique(map: "uc_product_category_description") @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ProductUnit {
    id          Int    @id @default(autoincrement())
    description String @unique(map: "uc_product_unit_description") @db.VarChar(3)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Purchase {
    id                Int      @id @default(autoincrement())
    order_number      Int
    purchase_order_ps String?  @db.VarChar(255)
    order_date        DateTime @db.Timestamp(6)
    release_date      DateTime @db.Timestamp(6)
    expiration_date   DateTime @db.Timestamp(6)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model PurchaseItem {
    id            Int     @id @default(autoincrement())
    quantity_item Int
    unitary_value Decimal @db.Decimal(10, 2)
    total_value   Decimal @db.Decimal(10, 2)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Sale {
    id              Int      @id @default(autoincrement())
    order_number    Int
    sale_order_ps   String?  @db.VarChar(255)
    order_date      DateTime @db.Timestamp(6)
    release_date    DateTime @db.Timestamp(6)
    expiration_date DateTime @db.Timestamp(6)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model SaleItem {
    id            Int     @id @default(autoincrement())
    quantity_item Int
    unitary_value Decimal @db.Decimal(10, 2)
    total_value   Decimal @db.Decimal(10, 2)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Supplier {
    id    Int    @id @default(autoincrement())
    name  String @db.VarChar(255)
    email String @unique(map: "uc_supplier_email") @db.VarChar(100)
}

model User {
    id       Int     @id @default(autoincrement())
    name     String
    email    String  @unique
    password String
    admin    Boolean
}
